
Notes
1. Remember: React reacts to state changes by re-rendering the UI
2. You cannot use if/else statements directly in JSX ... (this sucks =| ). You have to use ternary operatoes like this:
    ex: { isOpen ? TrueResult : FalseResult }


Best Practices
1. Use Create-React-App for examples and small projects
2. For debugging, see if you can create a component tree

Questions

Q12. What is JSX ? 
- Declarative syntax to describe what components looks like and how they works
    - Describes what UI should like like using JSX, based on current data
    - Abstraction away from DOM: Never touch the DOM
    - Reflection of the current data
- Componenets must return a block of JSX
- Extension of JS that allows us to embed JS, CSS and React compnenets into HTML
- Each JSX Element is converted Reaxt.createElement function call  (using BABEL)

Component____
|    Data    |
|   Logic    |
| Appearance |
|____________|

Q11. What are components ? 
- Components are building blocks
- React made entirely out of components
- Each component has its own data, logic and appearance (how it works and looks)
- Components can be reused, nested inside other compoenets and pass data between them
- MUST return a block of JSX, in order to render to the UI (can also return null)

Q10. What is the purpose of StrictMode in React ?
1. Checks for outdated parts during build
2. Runs components twice to check for bugs

Q9. How to start react app ?
- npx run start

Q8. How to build a Create-react-app ?
- npx create-react-app NAMEOFAPP

Q7. what are Production grade React frameworks ?
1. Next.JS - Full stack React framework
2. Remix - Full stack React framework with nested routing

Q6. Pros and cos of Vite ?
1. Moder build tool that contains a template for setting up React Applications
2. Need to maually set up ESLint (and others)
3. Extremely fast hot module replacement and bundling

Q5. Pros and cons of Create-React-App ?
1. Complete starter kit for react Applications
2. Everything is already configured : ESLint, Prettier, Jest, etc
3. Slow and Outdated (i.e webpack)

Q4. What are the two options for setting up a react project? 
1. Create-react-app
2. Vite  



Q3. How is React state driven ?
1. State of data changes 
2. Cause a Render on UI
3. User updates the UI
4. Causes an update in State
5. State of data changes
6. Causes a Re-Render of the UI
7. Repeat ...

Remember: React reacts to state changes by re-rendering the UI


Q2. What is React ? 
- Declarative, component based, state driven JS library for building UI
- Never touches the DOM
- Main goal of react is to keep UI insync with the data

Q1. Why do FE Framework exists ?
1. Keep UI in sync with Data. (Very diffcult from vanilla JS to do this)
2. Enforce a correct way of structuring code
3. Give developers a consistent way to buildin FE Applications

- How do we figure out which dependency triggered the useEffect ?
